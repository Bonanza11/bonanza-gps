const stripe = require('stripe')(process.env.STRIPE_SECRET_KEY);

module.exports = async (req, res) => {
Â Â if (req.method !== 'POST') {
Â Â Â Â return res.status(405).json({ error: 'Method Not Allowed' });
Â Â }

Â Â try {
Â Â Â Â console.log('BODY RECIBIDO:', req.body); // ðŸ‘ˆ importante para depurar

Â Â Â Â const { amount } = req.body;

Â Â Â Â if (!amount || isNaN(amount)) {
Â Â Â Â Â Â return res.status(400).json({ error: 'Invalid amount' });
Â Â Â Â }

Â Â Â Â const session = await stripe.checkout.sessions.create({
Â Â Â Â Â Â payment_method_types: ['card'],
Â Â Â Â Â Â mode: 'payment',
Â Â Â Â Â Â line_items: [
Â Â Â Â Â Â Â Â {
Â Â Â Â Â Â Â Â Â Â price_data: {
Â Â Â Â Â Â Â Â Â Â Â Â currency: 'usd',
Â Â Â Â Â Â Â Â Â Â Â Â product_data: {
Â Â Â Â Â Â Â Â Â Â Â Â Â Â name: 'Bonanza Transportation Ride',
Â Â Â Â Â Â Â Â Â Â Â Â },
Â Â Â Â Â Â Â Â Â Â Â Â unit_amount: Math.round(amount), // ya debe venir multiplicado por 100
Â Â Â Â Â Â Â Â Â Â },
Â Â Â Â Â Â Â Â Â Â quantity: 1,
Â Â Â Â Â Â Â Â },
Â Â Â Â Â Â ],
Â Â Â Â Â Â success_url: `${req.headers.origin}/success`,
Â Â Â Â Â Â cancel_url: `${req.headers.origin}/cancel`,
Â Â Â Â });

Â Â Â Â return res.status(200).json({ id: session.id });
Â Â } catch (err) {
Â Â Â Â console.error('Stripe error:', err); // muestra error real
Â Â Â Â return res.status(500).json({ error: 'Payment initiation failed' });
Â Â }
};
